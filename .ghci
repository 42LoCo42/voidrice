-- vim: set filetype=haskell:
:set -Wall
:set -Wno-type-defaults
:set -cpp -DDEBUG -DDEBUG_IS_MODULE

:def rq (\qs -> return $ "putStrLn $(stringE . show =<< " ++ qs ++ ")")
:def pq (\qs -> return $ "putStrLn $(stringE . pprint =<< " ++ qs ++ ")")
:def pf (\qs -> return $ ":!pointfree \"" ++ qs ++ "\"")

-- :set -XNoMonomorphismRestriction
--
-- import qualified IPPrint
-- import qualified Language.Haskell.HsColour as HsColour
-- import qualified Language.Haskell.HsColour.Colourise as HsColour
-- import qualified Language.Haskell.HsColour.Output as HsColour
--
-- let myColourPrefs = HsColour.defaultColourPrefs { HsColour.conid = [HsColour.Foreground HsColour.Yellow, HsColour.Bold], HsColour.conop = [HsColour.Foreground HsColour.Yellow], HsColour.string = [HsColour.Foreground HsColour.Green], HsColour.char = [HsColour.Foreground HsColour.Cyan], HsColour.number = [HsColour.Foreground HsColour.Red, HsColour.Bold], HsColour.layout = [HsColour.Foreground HsColour.White], HsColour.keyglyph = [HsColour.Foreground HsColour.White] }
--
-- let myPrint = putStrLn . HsColour.hscolour (HsColour.TTYg HsColour.XTerm256Compatible) myColourPrefs False False "" False . IPPrint.pshow
--
-- :set -interactive-print=myPrint

:set prompt      "[1m[37mÎ»[m "
:set prompt-cont "|> "
